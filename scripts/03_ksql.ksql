create stream data_demo_stream  (who varchar, batt INTEGER, lon DOUBLE, lat DOUBLE, timeepoc BIGINT, alt INTEGER, speed DOUBLE) 
with (kafka_topic = 'data_demo', value_format='JSON');

CREATE table runner_status with (value_format='JSON') AS 
select who
, min(speed) as min_speed
, max(speed) as max_speed
, min(GEO_DISTANCE(lat, lon, -33.87014, 151.211945, 'km')) as dist_to_finish
, count(*) as num_events 
from data_demo_stream WINDOW TUMBLING (size 5 minute) 
group by who;


create stream runner_location with (value_format='JSON') as
select who
, timeepoc as event_time
, cast(lat as varchar) ||','||cast(lon as varchar) as LOCATION
, alt
, batt
, speed
from data_demo_stream ;



-- MQTT stuff below

create stream realtime_runner_location_stream  (tid varchar, batt INTEGER, lon DOUBLE, lat DOUBLE, tst BIGINT, alt INTEGER) 
with (kafka_topic = 'realtime_runner_location', value_format='JSON');




create stream mqtt_demo_stream  (who varchar, batt INTEGER, lon DOUBLE, lat DOUBLE, tst BIGINT, alt INTEGER) with (kafka_topic = 'mqtt-demo', value_format='JSON');


create stream runner_location with (value_format='JSON') as
select split(rowkey, '/')[2] as who
, tst as event_time
, cast(lat as varchar) ||','||cast(lon as varchar) as LOCATION
, alt
, batt
from realtime_runner_location_stream;

create stream mqtt_demo_stream  (who varchar, batt INTEGER, lon DOUBLE, lat DOUBLE, tst BIGINT, alt INTEGER) with (kafka_topic = 'mqtt-demo', value_format='JSON');

insert into runner_location select who, tst as event_time, cast(lat as varchar) ||','||cast(lon as varchar) as LOCATION, alt, batt from mqtt_demo_stream;

create stream silly_stream  (who varchar, batt INTEGER, lon DOUBLE, lat DOUBLE, timeepoc BIGINT, alt INTEGER) with (kafka_topic = 'silly', value_format='JSON');

insert into runner_location select who, timeepoc as tst as event_time, cast(lat as varchar) ||','||cast(lon as varchar) as LOCATION, alt, batt from silly_stream;
